template "Skylark Web application" main;

id     "Application name"    classname = PACKAGE;
id     "Main page root path" root = PACKAGE;
text   "TCP/IP port"         port = "8001";
select("No database", "MySQL", "Postgres", "Sqlite3") "Database" db = 1;

@@<:PACKAGE:>.h
#ifndef _<:PACKAGE:>_<:PACKAGE:>_h
#define _<:PACKAGE:>_<:PACKAGE:>_h

#include <Skylark/Skylark.h><:?db==1:>
#include <MySql/MySql.h><:?db==2:>
#include <PostgreSQL/PostgreSQL.h><:?db==3:>
#include <plugin/sqlite3/Sqlite3.h><:.:>

using namespace Upp;

<:?db:>#define  MODEL         <<:PACKAGE:>/Model.sch><:?db==1:>
#define  SCHEMADIALECT <MySql/MySqlSchema.h><:?db==2:>
#define  SCHEMADIALECT <PostgreSQL/PostgreSQLSchema.h><:?db==3:>
#define  SCHEMADIALECT <plugin/sqlite3/Sqlite3Schema.h><:?db:>
#include <Sql/sch_header.h><:.:>

class <:classname:> : public SkylarkApp {
public:<:?db:>
	virtual void WorkThread();
<:.:>
	typedef <:classname:> CLASSNAME;
	<:classname:>();
};

#endif
@@Model.sch
??db
TABLE_(MY_TABLE)
	<:?db==2:>ISERIAL_(ID) PRIMARY KEY<:/:>INT_   (ID) PRIMARY_KEY AUTO_INCREMENT<:.:>
END_TABLE
@@Handlers.icpp
#include "<:PACKAGE:>.h"

SKYLARK(HomePage, "")
{
	http.RenderResult("<:PACKAGE:>/index.witz");
}

SKYLARK(CatchAll, "**")
{
	http.Redirect(HomePage);
}

@@Main.cpp
#include "<:PACKAGE:>.h"
<:?db:>
#include <Sql/sch_schema.h>
#include <Sql/sch_source.h>
<:.:>
<:classname:>::<:classname:>()
{
	root = "<:root:>";
#ifdef _DEBUG
	prefork = 0;
	use_caching = false;
#endif<:?db==3:>
	threads = 1; // Sqlite3 does not work well with multiple threads<:.:>
	port = <:port:>;
}
<:?db==1:>
void OpenSQL(MySqlSession& session)
{
	// TODO: Fill your connection credentials here:
	if(!session.Connect("user", "password", "database")) {
		SKYLARKLOG("Can't connect to database");
		Exit(1);
	}
#ifdef _DEBUG
	session.LogErrors();
	session.SetTrace();
#endif
	SQL = session;
}

void InitModel()
{
#ifdef _DEBUG
	MySqlSession session;
	OpenSQL(session);
	SqlSchema sch(MY_SQL);
	All_Tables(sch);
	SqlPerformScript(sch.Upgrade());
	SqlPerformScript(sch.Attributes());
	sch.SaveNormal();
#endif
}

void <:classname:>::WorkThread()
{
	MySqlSession session;
	OpenSQL(session);
	RunThread();
}
<:?db==2:>
void OpenSQL(PostgreSQLSession& session)
{
	// TODO: Fill your connection credentials here:
	if(!session.Open("host=localhost dbname=database user=user password=password")) {
		SKYLARKLOG("Can't connect to database");
		Exit(1);
	}
#ifdef _DEBUG
	session.LogErrors();
	session.SetTrace();
#endif
	SQL = session;
}

void InitModel()
{
#ifdef _DEBUG
	PostgreSQLSession session;
	OpenSQL(session);
	SqlSchema sch(PGSQL);
	All_Tables(sch);
	SqlPerformScript(sch.Upgrade());
	SqlPerformScript(sch.Attributes());
	sch.SaveNormal();
#endif
}

void <:classname:>::WorkThread()
{
	PostgreSQLSession session;
	OpenSQL(session);
	RunThread();
}
<:?db==3:>
void OpenSQL(Sqlite3Session& session)
{
	if(!session.Open(ConfigFile("db.sqlite3"))) {
		SKYLARKLOG("Can't create or open database file");
		Exit(1);
	}
#ifdef _DEBUG
	session.LogErrors();
	session.SetTrace();
#endif
	SQL = session;
}

void InitModel()
{
#ifdef _DEBUG
	Sqlite3Session session;
	OpenSQL(session);
	SqlSchema sch(SQLITE3);
	All_Tables(sch);
	SqlPerformScript(sch.Upgrade());
	SqlPerformScript(sch.Attributes());
	sch.SaveNormal();
#endif
}

void <:classname:>::WorkThread()
{
	Sqlite3Session session;
	OpenSQL(session);
	RunThread();
}
<:.:>
// Local server URL: 127.0.0.1:<:port:>/<:root:>
CONSOLE_APP_MAIN
{
#ifdef _DEBUG
	StdLogSetup(LOG_FILE|LOG_COUT);
	Ini::skylark_log = true;
#endif
	<:?db:>InitModel();<:.:>
	<:classname:>().Run();
}

@@index.witz
#include Skylark/Base

#define TITLE <:PACKAGE:> application

#define BODY

This is initial home page content of <:PACKAGE:> application.

@@<:PACKAGE:>.upp
uses
	Skylark<:?db == 1:>, MySql<:?db == 2:>, PostgreSQL<:?db == 3:>, plugin/sqlite3<:.:>;

file
	<:PACKAGE:>.h,<:?db:>
	Model.sch,<:.:>
	Handlers.icpp,
	index.witz,
	Main.cpp;

mainconfig
	"" = "MT";
