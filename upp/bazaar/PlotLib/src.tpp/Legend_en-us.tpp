topic "Legend";
[2 $$0,0#00000000000000000000000000000000:Default]
[i448;a25;kKO9;2 $$1,0#37138531426314131252341829483380:class]
[l288;2 $$2,2#27521748481378242620020725143825:desc]
[0 $$3,0#96390100711032703541132217272105:end]
[H6;0 $$4,0#05600065144404261032431302351956:begin]
[i448;a25;kKO9;2 $$5,0#37138531426314131252341829483370:item]
[l288;a4;*@5;1 $$6,6#70004532496200323422659154056402:requirement]
[l288;i1121;b17;O9;~~~.1408;2 $$7,0#10431211400427159095818037425705:param]
[i448;b42;O9;2 $$8,8#61672508125594000341940100500538:tparam]
[b42;2 $$9,9#13035079074754324216151401829390:normal]
[{_} 
[ {{10000@(113.42.0) [s0;%% [*@7;4 Legend]]}}&]
[s1;@(0.0.255)3 &]
[s1;:Legend`:`:class: [@(0.0.255)3 class][3 _][*3 Legend]&]
[s2;%% Legend represents a legend for an assigned Plot.&]
[s3; &]
[ {{10000F(128)G(128)@1 [s0;%% [* Public Method List]]}}&]
[s5;* &]
[s5;:Legend`:`:Legend`(Plot`&`): [* Legend]([_^Plot^ Plot][@(0.0.255) `&]_[*@3 plot])&]
[s2;%% Construct legend for [%-*@3 plot] with default properties.&]
[s3;%% &]
[s4; &]
[s5;:Legend`:`:Legend`(Plot`&`,RGBA`,RGBA`,double`): [* Legend]([_^Plot^ Plot][@(0.0.255) `&
]_[*@3 plot],[_^RGBA^ RGBA]_[*@3 frame],[_^RGBA^ RGBA]_[*@3 background],[@(0.0.255) double]_[*@3 w
idth][@(0.0.255) `=][@3 1])&]
[s2;%% Construct legend for [%-*@3 plot] with specified properties.&]
[s0; &]
[ {{10000F(128)G(128)@1 [s0;%% [* Constructor detail]]}}&]
[s5;_^Image^ &]
[s5;:Legend`:`:GetLegend`(`)const: [_^Image^ Image]_[* GetLegend]()[@(0.0.255) const]&]
[s2;%% Returns the legend as Image to be saved or further processed.&]
[s3; &]
[s4; &]
[s5;:Legend`:`:GetSizeHint`(`)const: [_^Size^ Size]_[* GetSizeHint]()[@(0.0.255) const]&]
[s2;%% Returns optimal size in which the legend would fit perfectly.&]
[s3; &]
[s4; &]
[s5;:Legend`:`:GetHashValue`(`)const: [@(0.0.255) unsigned]_[* GetHashValue]()[@(0.0.255) c
onst]&]
[s2;%% Returns a hash that only changes when the Image that would 
be returned by GetLegend() changes.&]
[s3; &]
[s4; &]
[s5;:Legend`:`:GetFrameColor`(`)const: [_^RGBA^ RGBA]_[* GetFrameColor]()[@(0.0.255) const]&]
[s2;%% Returns color of the frame.&]
[s3; &]
[s4; &]
[s5;:Legend`:`:GetBackground`(`)const: [_^RGBA^ RGBA]_[* GetBackground]()[@(0.0.255) const]&]
[s2;%% Returns color of the background.&]
[s3; &]
[s4; &]
[s5;:Legend`:`:GetPlot`(`)const: [_^Plot^ Plot][@(0.0.255) `&]_[* GetPlot]()[@(0.0.255) const
]&]
[s2;%% Returns reference to the associated Plot.&]
[s3; &]
[s4; &]
[s5;:Legend`:`:GetFrameWidth`(`)const: [@(0.0.255) double]_[* GetFrameWidth]()[@(0.0.255) c
onst]&]
[s2;%% Return width of the frame.&]
[s3; &]
[s4; &]
[s5;:Legend`:`:GetSize`(`)const: [_^Size^ Size]_[* GetSize]()[@(0.0.255) const]&]
[s2;%% Returns current size.&]
[s3; &]
[s4; &]
[s5;:Legend`:`:SetFrameColor`(RGBA`): [_^Legend^ Legend][@(0.0.255) `&]_[* SetFrameColor]([_^RGBA^ R
GBA]_[*@3 frame])&]
[s2;%% Return color of the frame.&]
[s3;%% &]
[s4; &]
[s5;:Legend`:`:SetBackground`(RGBA`): [_^Legend^ Legend][@(0.0.255) `&]_[* SetBackground]([_^RGBA^ R
GBA]_[*@3 background])&]
[s2;%% Returns color of the background.&]
[s3;%% &]
[s4; &]
[s5;:Legend`:`:SetPlot`(Plot`&`): [_^Legend^ Legend][@(0.0.255) `&]_[* SetPlot]([_^Plot^ Plot
][@(0.0.255) `&]_[*@3 plot])&]
[s2;%% Sets legend to reflect the serries in [%-*@3 plot].&]
[s3;%% &]
[s4; &]
[s5;:Legend`:`:SetFrameWidth`(double`): [_^Legend^ Legend][@(0.0.255) `&]_[* SetFrameWidth](
[@(0.0.255) double]_[*@3 width])&]
[s2;%% Sets width of the frame.&]
[s3;%% &]
[s4; &]
[s5;:Legend`:`:SetSize`(Size`): [@(0.0.255) void]_[* SetSize]([_^Size^ Size]_[*@3 sz])&]
[s2;%% Sets size of the legend.&]
[s3;%% &]
[s0; ]